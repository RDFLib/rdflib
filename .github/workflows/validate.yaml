name: Validate

on:
  push:
    branches: ["master"]
  pull_request:
  workflow_dispatch:

env:
  FORCE_COLOR: 1
  XDG_CACHE_HOME: ${{ github.workspace }}/cache
  PIP_CACHE_DIR: ${{ github.workspace }}/pip-cache

jobs:
  validate:
    permissions:
      contents: read
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.7", "3.8", "3.9", "3.10"]
        os: [ubuntu-latest, macos-latest, windows-latest]
        include:
          - python-version: "3.7"
            os: ubuntu-latest
            extensive-tests: true
          - python-version: "3.8"
            os: ubuntu-latest
            TOX_EXTRA_COMMAND: "- isort --check-only --diff ."
          - python-version: "3.9"
            os: ubuntu-latest
            TOX_EXTRA_COMMAND: "- black --check --diff ./rdflib"
          - python-version: "3.10"
            os: ubuntu-latest
            TOX_EXTRA_COMMAND: "flake8 --exit-zero rdflib"
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - uses: actions/setup-java@v2
        if: ${{ matrix.extensive-tests }}
        with:
          distribution: "temurin"
          java-version: "17"
      - name: Cache pip
        uses: actions/cache@v2
        with:
          path: ${{ env.PIP_CACHE_DIR }}
          key: ${{ matrix.os }}-pip-${{ matrix.python-version }}-v1-${{
            hashFiles('**/setup.py', '**/*requirements*.txt') }}
          restore-keys: |
            ${{ matrix.os }}-pip-${{ matrix.python-version }}-v1-
      - name: Cache xdg
        uses: actions/cache@v2
        with:
          path: ${{ env.XDG_CACHE_HOME }}
          key: ${{ matrix.os }}-xdg-v1-${{ hashFiles('**/with-fuseki.sh') }}
          restore-keys: |
            ${{ matrix.os }}-xdg-v1-
      - name: Install Task
        uses: arduino/setup-task@v1
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Run validation
        shell: bash
        run: |
          task \
            TOX_EXTRA_COMMAND="${{ matrix.TOX_EXTRA_COMMAND }}" \
            OS=${{ matrix.os }} \
            EXTENSIVE=${{ matrix.extensive-tests }} \
            TOX_PYTHON_VERSION=${{ matrix.python-version }} \
            gha:validate
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  extra-tasks:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
        - task: "gha:flake8"
          python-version: 3.8
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{env.DEFAULT_PYTHON}}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - name: Cache pip
        uses: actions/cache@v3
        with:
          path: ${{ env.PIP_CACHE_DIR }}
          key: tox-${{ matrix.task }}-pip-v1-${{
            hashFiles('**/setup.py', '**/requirements*.txt') }}
          restore-keys: |
            tox-${{ matrix.task }}-pip-v1-
      - name: Install Task
        uses: arduino/setup-task@v1
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Run task
        shell: bash
        run: |
          task ${{ matrix.task }}
  finish:
    permissions:
      contents: read
    needs: validate
    runs-on: ubuntu-latest
    steps:
      - name: Coveralls Finished
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          parallel-finished: true
