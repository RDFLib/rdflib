#Processed by EYE v20.0218.2044 josd
#eye --no-genid http://josd.github.io/brain/preduction/palindrome2.n3 --query http://josd.github.io/brain/preduction/palindrome2-query.n3

@prefix e: <http://eulersharp.sourceforge.net/2003/03swap/log-rules#>.
@prefix : <http://josd.github.io/brain#>.
@prefix p: <http://josd.github.io/brain/preduction#>.
@prefix log: <http://www.w3.org/2000/10/swap/log#>.
@prefix r: <http://www.w3.org/2000/10/swap/reason#>.
@prefix var: <http://josd.github.io/var#>.
@prefix n3: <http://www.w3.org/2004/06/rei#>.

[] a r:Proof, r:Conjunction;
  r:component <#lemma1>;
  r:gives {
    "ingirumimusnocteetconsumimurigni" a :Palindrome.
  }.

<#lemma1> a r:Inference;
  r:gives {
    "ingirumimusnocteetconsumimurigni" a :Palindrome.
  };
  r:evidence (
    [ a r:Fact; r:gives {("atom_codes" "ingirumimusnocteetconsumimurigni" (105 110 103 105 114 117 109 105 109 117 115 110 111 99 116 101 101 116 99 111 110 115 117 109 105 109 117 114 105 103 110 105)) e:derive true}]
    <#lemma2>
  );
  r:binding [ r:variable [ n3:uri "http://josd.github.io/var#x_0"]; r:boundTo (105 110 103 105 114 117 109 105 109 117 115 110 111 99 116 101 101 116 99 111 110 115 117 109 105 109 117 114 105 103 110 105)];
  r:rule <#lemma3>.

<#lemma2> a r:Inference;
  r:gives {
    ((105 110 103 105 114 117 109 105 109 117 115 110 111 99 116 101 101 116 99 111 110 115 117 109 105 109 117 114 105 103 110 105)) :palindrome true.
  };
  r:evidence (
    <#lemma4>
  );
  r:binding [ r:variable [ n3:uri "http://josd.github.io/var#x_0"]; r:boundTo (105 110 103 105 114 117 109 105 109 117 115 110 111 99 116 101 101 116 99 111 110 115 117 109 105 109 117 114 105 103 110 105)];
  r:rule <#lemma5>.

<#lemma3> a r:Extraction;
  r:gives {
    @forAll var:x_0. {("atom_codes" "ingirumimusnocteetconsumimurigni" var:x_0) e:derive true.
     (var:x_0) :palindrome true} => {"ingirumimusnocteetconsumimurigni" a :Palindrome}.
  };
  r:because [ a r:Parsing; r:source <http://josd.github.io/brain/preduction/palindrome2-query.n3>].

<#lemma4> a r:Inference;
  r:gives {
    ((105 110 103 105 114 117 109 105 109 117 115 110 111 99 116 101 101 116 99 111 110 115 117 109 105 109 117 114 105 103 110 105) :push ()) :palindrome true.
  };
  r:evidence (
    [ a r:Fact; r:gives {(105 110 103 105 114 117 109 105 109 117 115 110 111 99 116 101 101 116 99 111 110 115 117 109 105 109 117 114 105 103 110 105) e:firstRest (105 (110 103 105 114 117 109 105 109 117 115 110 111 99 116 101 101 116 99 111 110 115 117 109 105 109 117 114 105 103 110 105))}]
    [ a r:Fact; r:gives {(105) e:firstRest (105 ())}]
    <#lemma6>
  );
  r:binding [ r:variable [ n3:uri "http://josd.github.io/var#x_0"]; r:boundTo (105 110 103 105 114 117 109 105 109 117 115 110 111 99 116 101 101 116 99 111 110 115 117 109 105 109 117 114 105 103 110 105)];
  r:binding [ r:variable [ n3:uri "http://josd.github.io/var#x_1"]; r:boundTo 105];
  r:binding [ r:variable [ n3:uri "http://josd.github.io/var#x_2"]; r:boundTo (110 103 105 114 117 109 105 109 117 115 110 111 99 116 101 101 116 99 111 110 115 117 109 105 109 117 114 105 103 110 105)];
  r:binding [ r:variable [ n3:uri "http://josd.github.io/var#x_3"]; r:boundTo (105)];
  r:binding [ r:variable [ n3:uri "http://josd.github.io/var#x_4"]; r:boundTo ()];
  r:rule <#lemma7>.

<#lemma5> a r:Extraction;
  r:gives {
    @forAll var:x_0. {(var:x_0) :palindrome true} <= {(var:x_0 :push ()) :palindrome true}.
  };
  r:because [ a r:Parsing; r:source <http://josd.github.io/brain/preduction/palindrome2.n3>].

<#lemma6> a r:Inference;
  r:gives {
    ((110 103 105 114 117 109 105 109 117 115 110 111 99 116 101 101 116 99 111 110 115 117 109 105 109 117 114 105 103 110 105) :push (105)) :palindrome true.
  };
  r:evidence (
    [ a r:Fact; r:gives {(110 103 105 114 117 109 105 109 117 115 110 111 99 116 101 101 116 99 111 110 115 117 109 105 109 117 114 105 103 110 105) e:firstRest (110 (103 105 114 117 109 105 109 117 115 110 111 99 116 101 101 116 99 111 110 115 117 109 105 109 117 114 105 103 110 105))}]
    [ a r:Fact; r:gives {(110 105) e:firstRest (110 (105))}]
    <#lemma8>
  );
  r:binding [ r:variable [ n3:uri "http://josd.github.io/var#x_0"]; r:boundTo (110 103 105 114 117 109 105 109 117 115 110 111 99 116 101 101 116 99 111 110 115 117 109 105 109 117 114 105 103 110 105)];
  r:binding [ r:variable [ n3:uri "http://josd.github.io/var#x_1"]; r:boundTo 110];
  r:binding [ r:variable [ n3:uri "http://josd.github.io/var#x_2"]; r:boundTo (103 105 114 117 109 105 109 117 115 110 111 99 116 101 101 116 99 111 110 115 117 109 105 109 117 114 105 103 110 105)];
  r:binding [ r:variable [ n3:uri "http://josd.github.io/var#x_3"]; r:boundTo (110 105)];
  r:binding [ r:variable [ n3:uri "http://josd.github.io/var#x_4"]; r:boundTo (105)];
  r:rule <#lemma7>.

<#lemma7> a r:Extraction;
  r:gives {
    @forAll var:x_0, var:x_1, var:x_2, var:x_3, var:x_4. {(var:x_0 :push var:x_4) :palindrome true} <= {var:x_0 e:firstRest (var:x_1 var:x_2).
     var:x_3 e:firstRest (var:x_1 var:x_4).
     (var:x_2 :push var:x_3) :palindrome true}.
  };
  r:because [ a r:Parsing; r:source <http://josd.github.io/brain/preduction/palindrome2.n3>].

<#lemma8> a r:Inference;
  r:gives {
    ((103 105 114 117 109 105 109 117 115 110 111 99 116 101 101 116 99 111 110 115 117 109 105 109 117 114 105 103 110 105) :push (110 105)) :palindrome true.
  };
  r:evidence (
    [ a r:Fact; r:gives {(103 105 114 117 109 105 109 117 115 110 111 99 116 101 101 116 99 111 110 115 117 109 105 109 117 114 105 103 110 105) e:firstRest (103 (105 114 117 109 105 109 117 115 110 111 99 116 101 101 116 99 111 110 115 117 109 105 109 117 114 105 103 110 105))}]
    [ a r:Fact; r:gives {(103 110 105) e:firstRest (103 (110 105))}]
    <#lemma9>
  );
  r:binding [ r:variable [ n3:uri "http://josd.github.io/var#x_0"]; r:boundTo (103 105 114 117 109 105 109 117 115 110 111 99 116 101 101 116 99 111 110 115 117 109 105 109 117 114 105 103 110 105)];
  r:binding [ r:variable [ n3:uri "http://josd.github.io/var#x_1"]; r:boundTo 103];
  r:binding [ r:variable [ n3:uri "http://josd.github.io/var#x_2"]; r:boundTo (105 114 117 109 105 109 117 115 110 111 99 116 101 101 116 99 111 110 115 117 109 105 109 117 114 105 103 110 105)];
  r:binding [ r:variable [ n3:uri "http://josd.github.io/var#x_3"]; r:boundTo (103 110 105)];
  r:binding [ r:variable [ n3:uri "http://josd.github.io/var#x_4"]; r:boundTo (110 105)];
  r:rule <#lemma7>.

<#lemma9> a r:Inference;
  r:gives {
    ((105 114 117 109 105 109 117 115 110 111 99 116 101 101 116 99 111 110 115 117 109 105 109 117 114 105 103 110 105) :push (103 110 105)) :palindrome true.
  };
  r:evidence (
    [ a r:Fact; r:gives {(105 114 117 109 105 109 117 115 110 111 99 116 101 101 116 99 111 110 115 117 109 105 109 117 114 105 103 110 105) e:firstRest (105 (114 117 109 105 109 117 115 110 111 99 116 101 101 116 99 111 110 115 117 109 105 109 117 114 105 103 110 105))}]
    [ a r:Fact; r:gives {(105 103 110 105) e:firstRest (105 (103 110 105))}]
    <#lemma10>
  );
  r:binding [ r:variable [ n3:uri "http://josd.github.io/var#x_0"]; r:boundTo (105 114 117 109 105 109 117 115 110 111 99 116 101 101 116 99 111 110 115 117 109 105 109 117 114 105 103 110 105)];
  r:binding [ r:variable [ n3:uri "http://josd.github.io/var#x_1"]; r:boundTo 105];
  r:binding [ r:variable [ n3:uri "http://josd.github.io/var#x_2"]; r:boundTo (114 117 109 105 109 117 115 110 111 99 116 101 101 116 99 111 110 115 117 109 105 109 117 114 105 103 110 105)];
  r:binding [ r:variable [ n3:uri "http://josd.github.io/var#x_3"]; r:boundTo (105 103 110 105)];
  r:binding [ r:variable [ n3:uri "http://josd.github.io/var#x_4"]; r:boundTo (103 110 105)];
  r:rule <#lemma7>.

<#lemma10> a r:Inference;
  r:gives {
    ((114 117 109 105 109 117 115 110 111 99 116 101 101 116 99 111 110 115 117 109 105 109 117 114 105 103 110 105) :push (105 103 110 105)) :palindrome true.
  };
  r:evidence (
    [ a r:Fact; r:gives {(114 117 109 105 109 117 115 110 111 99 116 101 101 116 99 111 110 115 117 109 105 109 117 114 105 103 110 105) e:firstRest (114 (117 109 105 109 117 115 110 111 99 116 101 101 116 99 111 110 115 117 109 105 109 117 114 105 103 110 105))}]
    [ a r:Fact; r:gives {(114 105 103 110 105) e:firstRest (114 (105 103 110 105))}]
    <#lemma11>
  );
  r:binding [ r:variable [ n3:uri "http://josd.github.io/var#x_0"]; r:boundTo (114 117 109 105 109 117 115 110 111 99 116 101 101 116 99 111 110 115 117 109 105 109 117 114 105 103 110 105)];
  r:binding [ r:variable [ n3:uri "http://josd.github.io/var#x_1"]; r:boundTo 114];
  r:binding [ r:variable [ n3:uri "http://josd.github.io/var#x_2"]; r:boundTo (117 109 105 109 117 115 110 111 99 116 101 101 116 99 111 110 115 117 109 105 109 117 114 105 103 110 105)];
  r:binding [ r:variable [ n3:uri "http://josd.github.io/var#x_3"]; r:boundTo (114 105 103 110 105)];
  r:binding [ r:variable [ n3:uri "http://josd.github.io/var#x_4"]; r:boundTo (105 103 110 105)];
  r:rule <#lemma7>.

<#lemma11> a r:Inference;
  r:gives {
    ((117 109 105 109 117 115 110 111 99 116 101 101 116 99 111 110 115 117 109 105 109 117 114 105 103 110 105) :push (114 105 103 110 105)) :palindrome true.
  };
  r:evidence (
    [ a r:Fact; r:gives {(117 109 105 109 117 115 110 111 99 116 101 101 116 99 111 110 115 117 109 105 109 117 114 105 103 110 105) e:firstRest (117 (109 105 109 117 115 110 111 99 116 101 101 116 99 111 110 115 117 109 105 109 117 114 105 103 110 105))}]
    [ a r:Fact; r:gives {(117 114 105 103 110 105) e:firstRest (117 (114 105 103 110 105))}]
    <#lemma12>
  );
  r:binding [ r:variable [ n3:uri "http://josd.github.io/var#x_0"]; r:boundTo (117 109 105 109 117 115 110 111 99 116 101 101 116 99 111 110 115 117 109 105 109 117 114 105 103 110 105)];
  r:binding [ r:variable [ n3:uri "http://josd.github.io/var#x_1"]; r:boundTo 117];
  r:binding [ r:variable [ n3:uri "http://josd.github.io/var#x_2"]; r:boundTo (109 105 109 117 115 110 111 99 116 101 101 116 99 111 110 115 117 109 105 109 117 114 105 103 110 105)];
  r:binding [ r:variable [ n3:uri "http://josd.github.io/var#x_3"]; r:boundTo (117 114 105 103 110 105)];
  r:binding [ r:variable [ n3:uri "http://josd.github.io/var#x_4"]; r:boundTo (114 105 103 110 105)];
  r:rule <#lemma7>.

<#lemma12> a r:Inference;
  r:gives {
    ((109 105 109 117 115 110 111 99 116 101 101 116 99 111 110 115 117 109 105 109 117 114 105 103 110 105) :push (117 114 105 103 110 105)) :palindrome true.
  };
  r:evidence (
    [ a r:Fact; r:gives {(109 105 109 117 115 110 111 99 116 101 101 116 99 111 110 115 117 109 105 109 117 114 105 103 110 105) e:firstRest (109 (105 109 117 115 110 111 99 116 101 101 116 99 111 110 115 117 109 105 109 117 114 105 103 110 105))}]
    [ a r:Fact; r:gives {(109 117 114 105 103 110 105) e:firstRest (109 (117 114 105 103 110 105))}]
    <#lemma13>
  );
  r:binding [ r:variable [ n3:uri "http://josd.github.io/var#x_0"]; r:boundTo (109 105 109 117 115 110 111 99 116 101 101 116 99 111 110 115 117 109 105 109 117 114 105 103 110 105)];
  r:binding [ r:variable [ n3:uri "http://josd.github.io/var#x_1"]; r:boundTo 109];
  r:binding [ r:variable [ n3:uri "http://josd.github.io/var#x_2"]; r:boundTo (105 109 117 115 110 111 99 116 101 101 116 99 111 110 115 117 109 105 109 117 114 105 103 110 105)];
  r:binding [ r:variable [ n3:uri "http://josd.github.io/var#x_3"]; r:boundTo (109 117 114 105 103 110 105)];
  r:binding [ r:variable [ n3:uri "http://josd.github.io/var#x_4"]; r:boundTo (117 114 105 103 110 105)];
  r:rule <#lemma7>.

<#lemma13> a r:Inference;
  r:gives {
    ((105 109 117 115 110 111 99 116 101 101 116 99 111 110 115 117 109 105 109 117 114 105 103 110 105) :push (109 117 114 105 103 110 105)) :palindrome true.
  };
  r:evidence (
    [ a r:Fact; r:gives {(105 109 117 115 110 111 99 116 101 101 116 99 111 110 115 117 109 105 109 117 114 105 103 110 105) e:firstRest (105 (109 117 115 110 111 99 116 101 101 116 99 111 110 115 117 109 105 109 117 114 105 103 110 105))}]
    [ a r:Fact; r:gives {(105 109 117 114 105 103 110 105) e:firstRest (105 (109 117 114 105 103 110 105))}]
    <#lemma14>
  );
  r:binding [ r:variable [ n3:uri "http://josd.github.io/var#x_0"]; r:boundTo (105 109 117 115 110 111 99 116 101 101 116 99 111 110 115 117 109 105 109 117 114 105 103 110 105)];
  r:binding [ r:variable [ n3:uri "http://josd.github.io/var#x_1"]; r:boundTo 105];
  r:binding [ r:variable [ n3:uri "http://josd.github.io/var#x_2"]; r:boundTo (109 117 115 110 111 99 116 101 101 116 99 111 110 115 117 109 105 109 117 114 105 103 110 105)];
  r:binding [ r:variable [ n3:uri "http://josd.github.io/var#x_3"]; r:boundTo (105 109 117 114 105 103 110 105)];
  r:binding [ r:variable [ n3:uri "http://josd.github.io/var#x_4"]; r:boundTo (109 117 114 105 103 110 105)];
  r:rule <#lemma7>.

<#lemma14> a r:Inference;
  r:gives {
    ((109 117 115 110 111 99 116 101 101 116 99 111 110 115 117 109 105 109 117 114 105 103 110 105) :push (105 109 117 114 105 103 110 105)) :palindrome true.
  };
  r:evidence (
    [ a r:Fact; r:gives {(109 117 115 110 111 99 116 101 101 116 99 111 110 115 117 109 105 109 117 114 105 103 110 105) e:firstRest (109 (117 115 110 111 99 116 101 101 116 99 111 110 115 117 109 105 109 117 114 105 103 110 105))}]
    [ a r:Fact; r:gives {(109 105 109 117 114 105 103 110 105) e:firstRest (109 (105 109 117 114 105 103 110 105))}]
    <#lemma15>
  );
  r:binding [ r:variable [ n3:uri "http://josd.github.io/var#x_0"]; r:boundTo (109 117 115 110 111 99 116 101 101 116 99 111 110 115 117 109 105 109 117 114 105 103 110 105)];
  r:binding [ r:variable [ n3:uri "http://josd.github.io/var#x_1"]; r:boundTo 109];
  r:binding [ r:variable [ n3:uri "http://josd.github.io/var#x_2"]; r:boundTo (117 115 110 111 99 116 101 101 116 99 111 110 115 117 109 105 109 117 114 105 103 110 105)];
  r:binding [ r:variable [ n3:uri "http://josd.github.io/var#x_3"]; r:boundTo (109 105 109 117 114 105 103 110 105)];
  r:binding [ r:variable [ n3:uri "http://josd.github.io/var#x_4"]; r:boundTo (105 109 117 114 105 103 110 105)];
  r:rule <#lemma7>.

<#lemma15> a r:Inference;
  r:gives {
    ((117 115 110 111 99 116 101 101 116 99 111 110 115 117 109 105 109 117 114 105 103 110 105) :push (109 105 109 117 114 105 103 110 105)) :palindrome true.
  };
  r:evidence (
    [ a r:Fact; r:gives {(117 115 110 111 99 116 101 101 116 99 111 110 115 117 109 105 109 117 114 105 103 110 105) e:firstRest (117 (115 110 111 99 116 101 101 116 99 111 110 115 117 109 105 109 117 114 105 103 110 105))}]
    [ a r:Fact; r:gives {(117 109 105 109 117 114 105 103 110 105) e:firstRest (117 (109 105 109 117 114 105 103 110 105))}]
    <#lemma16>
  );
  r:binding [ r:variable [ n3:uri "http://josd.github.io/var#x_0"]; r:boundTo (117 115 110 111 99 116 101 101 116 99 111 110 115 117 109 105 109 117 114 105 103 110 105)];
  r:binding [ r:variable [ n3:uri "http://josd.github.io/var#x_1"]; r:boundTo 117];
  r:binding [ r:variable [ n3:uri "http://josd.github.io/var#x_2"]; r:boundTo (115 110 111 99 116 101 101 116 99 111 110 115 117 109 105 109 117 114 105 103 110 105)];
  r:binding [ r:variable [ n3:uri "http://josd.github.io/var#x_3"]; r:boundTo (117 109 105 109 117 114 105 103 110 105)];
  r:binding [ r:variable [ n3:uri "http://josd.github.io/var#x_4"]; r:boundTo (109 105 109 117 114 105 103 110 105)];
  r:rule <#lemma7>.

<#lemma16> a r:Inference;
  r:gives {
    ((115 110 111 99 116 101 101 116 99 111 110 115 117 109 105 109 117 114 105 103 110 105) :push (117 109 105 109 117 114 105 103 110 105)) :palindrome true.
  };
  r:evidence (
    [ a r:Fact; r:gives {(115 110 111 99 116 101 101 116 99 111 110 115 117 109 105 109 117 114 105 103 110 105) e:firstRest (115 (110 111 99 116 101 101 116 99 111 110 115 117 109 105 109 117 114 105 103 110 105))}]
    [ a r:Fact; r:gives {(115 117 109 105 109 117 114 105 103 110 105) e:firstRest (115 (117 109 105 109 117 114 105 103 110 105))}]
    <#lemma17>
  );
  r:binding [ r:variable [ n3:uri "http://josd.github.io/var#x_0"]; r:boundTo (115 110 111 99 116 101 101 116 99 111 110 115 117 109 105 109 117 114 105 103 110 105)];
  r:binding [ r:variable [ n3:uri "http://josd.github.io/var#x_1"]; r:boundTo 115];
  r:binding [ r:variable [ n3:uri "http://josd.github.io/var#x_2"]; r:boundTo (110 111 99 116 101 101 116 99 111 110 115 117 109 105 109 117 114 105 103 110 105)];
  r:binding [ r:variable [ n3:uri "http://josd.github.io/var#x_3"]; r:boundTo (115 117 109 105 109 117 114 105 103 110 105)];
  r:binding [ r:variable [ n3:uri "http://josd.github.io/var#x_4"]; r:boundTo (117 109 105 109 117 114 105 103 110 105)];
  r:rule <#lemma7>.

<#lemma17> a r:Inference;
  r:gives {
    ((110 111 99 116 101 101 116 99 111 110 115 117 109 105 109 117 114 105 103 110 105) :push (115 117 109 105 109 117 114 105 103 110 105)) :palindrome true.
  };
  r:evidence (
    [ a r:Fact; r:gives {(110 111 99 116 101 101 116 99 111 110 115 117 109 105 109 117 114 105 103 110 105) e:firstRest (110 (111 99 116 101 101 116 99 111 110 115 117 109 105 109 117 114 105 103 110 105))}]
    [ a r:Fact; r:gives {(110 115 117 109 105 109 117 114 105 103 110 105) e:firstRest (110 (115 117 109 105 109 117 114 105 103 110 105))}]
    <#lemma18>
  );
  r:binding [ r:variable [ n3:uri "http://josd.github.io/var#x_0"]; r:boundTo (110 111 99 116 101 101 116 99 111 110 115 117 109 105 109 117 114 105 103 110 105)];
  r:binding [ r:variable [ n3:uri "http://josd.github.io/var#x_1"]; r:boundTo 110];
  r:binding [ r:variable [ n3:uri "http://josd.github.io/var#x_2"]; r:boundTo (111 99 116 101 101 116 99 111 110 115 117 109 105 109 117 114 105 103 110 105)];
  r:binding [ r:variable [ n3:uri "http://josd.github.io/var#x_3"]; r:boundTo (110 115 117 109 105 109 117 114 105 103 110 105)];
  r:binding [ r:variable [ n3:uri "http://josd.github.io/var#x_4"]; r:boundTo (115 117 109 105 109 117 114 105 103 110 105)];
  r:rule <#lemma7>.

<#lemma18> a r:Inference;
  r:gives {
    ((111 99 116 101 101 116 99 111 110 115 117 109 105 109 117 114 105 103 110 105) :push (110 115 117 109 105 109 117 114 105 103 110 105)) :palindrome true.
  };
  r:evidence (
    [ a r:Fact; r:gives {(111 99 116 101 101 116 99 111 110 115 117 109 105 109 117 114 105 103 110 105) e:firstRest (111 (99 116 101 101 116 99 111 110 115 117 109 105 109 117 114 105 103 110 105))}]
    [ a r:Fact; r:gives {(111 110 115 117 109 105 109 117 114 105 103 110 105) e:firstRest (111 (110 115 117 109 105 109 117 114 105 103 110 105))}]
    <#lemma19>
  );
  r:binding [ r:variable [ n3:uri "http://josd.github.io/var#x_0"]; r:boundTo (111 99 116 101 101 116 99 111 110 115 117 109 105 109 117 114 105 103 110 105)];
  r:binding [ r:variable [ n3:uri "http://josd.github.io/var#x_1"]; r:boundTo 111];
  r:binding [ r:variable [ n3:uri "http://josd.github.io/var#x_2"]; r:boundTo (99 116 101 101 116 99 111 110 115 117 109 105 109 117 114 105 103 110 105)];
  r:binding [ r:variable [ n3:uri "http://josd.github.io/var#x_3"]; r:boundTo (111 110 115 117 109 105 109 117 114 105 103 110 105)];
  r:binding [ r:variable [ n3:uri "http://josd.github.io/var#x_4"]; r:boundTo (110 115 117 109 105 109 117 114 105 103 110 105)];
  r:rule <#lemma7>.

<#lemma19> a r:Inference;
  r:gives {
    ((99 116 101 101 116 99 111 110 115 117 109 105 109 117 114 105 103 110 105) :push (111 110 115 117 109 105 109 117 114 105 103 110 105)) :palindrome true.
  };
  r:evidence (
    [ a r:Fact; r:gives {(99 116 101 101 116 99 111 110 115 117 109 105 109 117 114 105 103 110 105) e:firstRest (99 (116 101 101 116 99 111 110 115 117 109 105 109 117 114 105 103 110 105))}]
    [ a r:Fact; r:gives {(99 111 110 115 117 109 105 109 117 114 105 103 110 105) e:firstRest (99 (111 110 115 117 109 105 109 117 114 105 103 110 105))}]
    <#lemma20>
  );
  r:binding [ r:variable [ n3:uri "http://josd.github.io/var#x_0"]; r:boundTo (99 116 101 101 116 99 111 110 115 117 109 105 109 117 114 105 103 110 105)];
  r:binding [ r:variable [ n3:uri "http://josd.github.io/var#x_1"]; r:boundTo 99];
  r:binding [ r:variable [ n3:uri "http://josd.github.io/var#x_2"]; r:boundTo (116 101 101 116 99 111 110 115 117 109 105 109 117 114 105 103 110 105)];
  r:binding [ r:variable [ n3:uri "http://josd.github.io/var#x_3"]; r:boundTo (99 111 110 115 117 109 105 109 117 114 105 103 110 105)];
  r:binding [ r:variable [ n3:uri "http://josd.github.io/var#x_4"]; r:boundTo (111 110 115 117 109 105 109 117 114 105 103 110 105)];
  r:rule <#lemma7>.

<#lemma20> a r:Inference;
  r:gives {
    ((116 101 101 116 99 111 110 115 117 109 105 109 117 114 105 103 110 105) :push (99 111 110 115 117 109 105 109 117 114 105 103 110 105)) :palindrome true.
  };
  r:evidence (
    [ a r:Fact; r:gives {(116 101 101 116 99 111 110 115 117 109 105 109 117 114 105 103 110 105) e:firstRest (116 (101 101 116 99 111 110 115 117 109 105 109 117 114 105 103 110 105))}]
    [ a r:Fact; r:gives {(116 99 111 110 115 117 109 105 109 117 114 105 103 110 105) e:firstRest (116 (99 111 110 115 117 109 105 109 117 114 105 103 110 105))}]
    <#lemma21>
  );
  r:binding [ r:variable [ n3:uri "http://josd.github.io/var#x_0"]; r:boundTo (116 101 101 116 99 111 110 115 117 109 105 109 117 114 105 103 110 105)];
  r:binding [ r:variable [ n3:uri "http://josd.github.io/var#x_1"]; r:boundTo 116];
  r:binding [ r:variable [ n3:uri "http://josd.github.io/var#x_2"]; r:boundTo (101 101 116 99 111 110 115 117 109 105 109 117 114 105 103 110 105)];
  r:binding [ r:variable [ n3:uri "http://josd.github.io/var#x_3"]; r:boundTo (116 99 111 110 115 117 109 105 109 117 114 105 103 110 105)];
  r:binding [ r:variable [ n3:uri "http://josd.github.io/var#x_4"]; r:boundTo (99 111 110 115 117 109 105 109 117 114 105 103 110 105)];
  r:rule <#lemma7>.

<#lemma21> a r:Inference;
  r:gives {
    ((101 101 116 99 111 110 115 117 109 105 109 117 114 105 103 110 105) :push (116 99 111 110 115 117 109 105 109 117 114 105 103 110 105)) :palindrome true.
  };
  r:evidence (
    [ a r:Fact; r:gives {(101 101 116 99 111 110 115 117 109 105 109 117 114 105 103 110 105) e:firstRest (101 (101 116 99 111 110 115 117 109 105 109 117 114 105 103 110 105))}]
    [ a r:Fact; r:gives {(101 116 99 111 110 115 117 109 105 109 117 114 105 103 110 105) e:firstRest (101 (116 99 111 110 115 117 109 105 109 117 114 105 103 110 105))}]
    <#lemma22>
  );
  r:binding [ r:variable [ n3:uri "http://josd.github.io/var#x_0"]; r:boundTo (101 101 116 99 111 110 115 117 109 105 109 117 114 105 103 110 105)];
  r:binding [ r:variable [ n3:uri "http://josd.github.io/var#x_1"]; r:boundTo 101];
  r:binding [ r:variable [ n3:uri "http://josd.github.io/var#x_2"]; r:boundTo (101 116 99 111 110 115 117 109 105 109 117 114 105 103 110 105)];
  r:binding [ r:variable [ n3:uri "http://josd.github.io/var#x_3"]; r:boundTo (101 116 99 111 110 115 117 109 105 109 117 114 105 103 110 105)];
  r:binding [ r:variable [ n3:uri "http://josd.github.io/var#x_4"]; r:boundTo (116 99 111 110 115 117 109 105 109 117 114 105 103 110 105)];
  r:rule <#lemma23>.

<#lemma22> a r:Inference;
  r:gives {
    ((101 116 99 111 110 115 117 109 105 109 117 114 105 103 110 105) :pop (101 116 99 111 110 115 117 109 105 109 117 114 105 103 110 105)) :palindrome true.
  };
  r:evidence (
    [ a r:Fact; r:gives {(101 116 99 111 110 115 117 109 105 109 117 114 105 103 110 105) e:firstRest (101 (116 99 111 110 115 117 109 105 109 117 114 105 103 110 105))}]
    [ a r:Fact; r:gives {(101 116 99 111 110 115 117 109 105 109 117 114 105 103 110 105) e:firstRest (101 (116 99 111 110 115 117 109 105 109 117 114 105 103 110 105))}]
    <#lemma24>
  );
  r:binding [ r:variable [ n3:uri "http://josd.github.io/var#x_0"]; r:boundTo (101 116 99 111 110 115 117 109 105 109 117 114 105 103 110 105)];
  r:binding [ r:variable [ n3:uri "http://josd.github.io/var#x_1"]; r:boundTo 101];
  r:binding [ r:variable [ n3:uri "http://josd.github.io/var#x_2"]; r:boundTo (116 99 111 110 115 117 109 105 109 117 114 105 103 110 105)];
  r:binding [ r:variable [ n3:uri "http://josd.github.io/var#x_3"]; r:boundTo (101 116 99 111 110 115 117 109 105 109 117 114 105 103 110 105)];
  r:binding [ r:variable [ n3:uri "http://josd.github.io/var#x_4"]; r:boundTo (116 99 111 110 115 117 109 105 109 117 114 105 103 110 105)];
  r:rule <#lemma25>.

<#lemma23> a r:Extraction;
  r:gives {
    @forAll var:x_0, var:x_1, var:x_2, var:x_3, var:x_4. {(var:x_0 :push var:x_4) :palindrome true} <= {var:x_0 e:firstRest (var:x_1 var:x_2).
     var:x_3 e:firstRest (var:x_1 var:x_4).
     (var:x_2 :pop var:x_3) :palindrome true}.
  };
  r:because [ a r:Parsing; r:source <http://josd.github.io/brain/preduction/palindrome2.n3>].

<#lemma24> a r:Inference;
  r:gives {
    ((116 99 111 110 115 117 109 105 109 117 114 105 103 110 105) :pop (116 99 111 110 115 117 109 105 109 117 114 105 103 110 105)) :palindrome true.
  };
  r:evidence (
    [ a r:Fact; r:gives {(116 99 111 110 115 117 109 105 109 117 114 105 103 110 105) e:firstRest (116 (99 111 110 115 117 109 105 109 117 114 105 103 110 105))}]
    [ a r:Fact; r:gives {(116 99 111 110 115 117 109 105 109 117 114 105 103 110 105) e:firstRest (116 (99 111 110 115 117 109 105 109 117 114 105 103 110 105))}]
    <#lemma26>
  );
  r:binding [ r:variable [ n3:uri "http://josd.github.io/var#x_0"]; r:boundTo (116 99 111 110 115 117 109 105 109 117 114 105 103 110 105)];
  r:binding [ r:variable [ n3:uri "http://josd.github.io/var#x_1"]; r:boundTo 116];
  r:binding [ r:variable [ n3:uri "http://josd.github.io/var#x_2"]; r:boundTo (99 111 110 115 117 109 105 109 117 114 105 103 110 105)];
  r:binding [ r:variable [ n3:uri "http://josd.github.io/var#x_3"]; r:boundTo (116 99 111 110 115 117 109 105 109 117 114 105 103 110 105)];
  r:binding [ r:variable [ n3:uri "http://josd.github.io/var#x_4"]; r:boundTo (99 111 110 115 117 109 105 109 117 114 105 103 110 105)];
  r:rule <#lemma25>.

<#lemma25> a r:Extraction;
  r:gives {
    @forAll var:x_0, var:x_1, var:x_2, var:x_3, var:x_4. {(var:x_0 :pop var:x_3) :palindrome true} <= {var:x_0 e:firstRest (var:x_1 var:x_2).
     var:x_3 e:firstRest (var:x_1 var:x_4).
     (var:x_2 :pop var:x_4) :palindrome true}.
  };
  r:because [ a r:Parsing; r:source <http://josd.github.io/brain/preduction/palindrome2.n3>].

<#lemma26> a r:Inference;
  r:gives {
    ((99 111 110 115 117 109 105 109 117 114 105 103 110 105) :pop (99 111 110 115 117 109 105 109 117 114 105 103 110 105)) :palindrome true.
  };
  r:evidence (
    [ a r:Fact; r:gives {(99 111 110 115 117 109 105 109 117 114 105 103 110 105) e:firstRest (99 (111 110 115 117 109 105 109 117 114 105 103 110 105))}]
    [ a r:Fact; r:gives {(99 111 110 115 117 109 105 109 117 114 105 103 110 105) e:firstRest (99 (111 110 115 117 109 105 109 117 114 105 103 110 105))}]
    <#lemma27>
  );
  r:binding [ r:variable [ n3:uri "http://josd.github.io/var#x_0"]; r:boundTo (99 111 110 115 117 109 105 109 117 114 105 103 110 105)];
  r:binding [ r:variable [ n3:uri "http://josd.github.io/var#x_1"]; r:boundTo 99];
  r:binding [ r:variable [ n3:uri "http://josd.github.io/var#x_2"]; r:boundTo (111 110 115 117 109 105 109 117 114 105 103 110 105)];
  r:binding [ r:variable [ n3:uri "http://josd.github.io/var#x_3"]; r:boundTo (99 111 110 115 117 109 105 109 117 114 105 103 110 105)];
  r:binding [ r:variable [ n3:uri "http://josd.github.io/var#x_4"]; r:boundTo (111 110 115 117 109 105 109 117 114 105 103 110 105)];
  r:rule <#lemma25>.

<#lemma27> a r:Inference;
  r:gives {
    ((111 110 115 117 109 105 109 117 114 105 103 110 105) :pop (111 110 115 117 109 105 109 117 114 105 103 110 105)) :palindrome true.
  };
  r:evidence (
    [ a r:Fact; r:gives {(111 110 115 117 109 105 109 117 114 105 103 110 105) e:firstRest (111 (110 115 117 109 105 109 117 114 105 103 110 105))}]
    [ a r:Fact; r:gives {(111 110 115 117 109 105 109 117 114 105 103 110 105) e:firstRest (111 (110 115 117 109 105 109 117 114 105 103 110 105))}]
    <#lemma28>
  );
  r:binding [ r:variable [ n3:uri "http://josd.github.io/var#x_0"]; r:boundTo (111 110 115 117 109 105 109 117 114 105 103 110 105)];
  r:binding [ r:variable [ n3:uri "http://josd.github.io/var#x_1"]; r:boundTo 111];
  r:binding [ r:variable [ n3:uri "http://josd.github.io/var#x_2"]; r:boundTo (110 115 117 109 105 109 117 114 105 103 110 105)];
  r:binding [ r:variable [ n3:uri "http://josd.github.io/var#x_3"]; r:boundTo (111 110 115 117 109 105 109 117 114 105 103 110 105)];
  r:binding [ r:variable [ n3:uri "http://josd.github.io/var#x_4"]; r:boundTo (110 115 117 109 105 109 117 114 105 103 110 105)];
  r:rule <#lemma25>.

<#lemma28> a r:Inference;
  r:gives {
    ((110 115 117 109 105 109 117 114 105 103 110 105) :pop (110 115 117 109 105 109 117 114 105 103 110 105)) :palindrome true.
  };
  r:evidence (
    [ a r:Fact; r:gives {(110 115 117 109 105 109 117 114 105 103 110 105) e:firstRest (110 (115 117 109 105 109 117 114 105 103 110 105))}]
    [ a r:Fact; r:gives {(110 115 117 109 105 109 117 114 105 103 110 105) e:firstRest (110 (115 117 109 105 109 117 114 105 103 110 105))}]
    <#lemma29>
  );
  r:binding [ r:variable [ n3:uri "http://josd.github.io/var#x_0"]; r:boundTo (110 115 117 109 105 109 117 114 105 103 110 105)];
  r:binding [ r:variable [ n3:uri "http://josd.github.io/var#x_1"]; r:boundTo 110];
  r:binding [ r:variable [ n3:uri "http://josd.github.io/var#x_2"]; r:boundTo (115 117 109 105 109 117 114 105 103 110 105)];
  r:binding [ r:variable [ n3:uri "http://josd.github.io/var#x_3"]; r:boundTo (110 115 117 109 105 109 117 114 105 103 110 105)];
  r:binding [ r:variable [ n3:uri "http://josd.github.io/var#x_4"]; r:boundTo (115 117 109 105 109 117 114 105 103 110 105)];
  r:rule <#lemma25>.

<#lemma29> a r:Inference;
  r:gives {
    ((115 117 109 105 109 117 114 105 103 110 105) :pop (115 117 109 105 109 117 114 105 103 110 105)) :palindrome true.
  };
  r:evidence (
    [ a r:Fact; r:gives {(115 117 109 105 109 117 114 105 103 110 105) e:firstRest (115 (117 109 105 109 117 114 105 103 110 105))}]
    [ a r:Fact; r:gives {(115 117 109 105 109 117 114 105 103 110 105) e:firstRest (115 (117 109 105 109 117 114 105 103 110 105))}]
    <#lemma30>
  );
  r:binding [ r:variable [ n3:uri "http://josd.github.io/var#x_0"]; r:boundTo (115 117 109 105 109 117 114 105 103 110 105)];
  r:binding [ r:variable [ n3:uri "http://josd.github.io/var#x_1"]; r:boundTo 115];
  r:binding [ r:variable [ n3:uri "http://josd.github.io/var#x_2"]; r:boundTo (117 109 105 109 117 114 105 103 110 105)];
  r:binding [ r:variable [ n3:uri "http://josd.github.io/var#x_3"]; r:boundTo (115 117 109 105 109 117 114 105 103 110 105)];
  r:binding [ r:variable [ n3:uri "http://josd.github.io/var#x_4"]; r:boundTo (117 109 105 109 117 114 105 103 110 105)];
  r:rule <#lemma25>.

<#lemma30> a r:Inference;
  r:gives {
    ((117 109 105 109 117 114 105 103 110 105) :pop (117 109 105 109 117 114 105 103 110 105)) :palindrome true.
  };
  r:evidence (
    [ a r:Fact; r:gives {(117 109 105 109 117 114 105 103 110 105) e:firstRest (117 (109 105 109 117 114 105 103 110 105))}]
    [ a r:Fact; r:gives {(117 109 105 109 117 114 105 103 110 105) e:firstRest (117 (109 105 109 117 114 105 103 110 105))}]
    <#lemma31>
  );
  r:binding [ r:variable [ n3:uri "http://josd.github.io/var#x_0"]; r:boundTo (117 109 105 109 117 114 105 103 110 105)];
  r:binding [ r:variable [ n3:uri "http://josd.github.io/var#x_1"]; r:boundTo 117];
  r:binding [ r:variable [ n3:uri "http://josd.github.io/var#x_2"]; r:boundTo (109 105 109 117 114 105 103 110 105)];
  r:binding [ r:variable [ n3:uri "http://josd.github.io/var#x_3"]; r:boundTo (117 109 105 109 117 114 105 103 110 105)];
  r:binding [ r:variable [ n3:uri "http://josd.github.io/var#x_4"]; r:boundTo (109 105 109 117 114 105 103 110 105)];
  r:rule <#lemma25>.

<#lemma31> a r:Inference;
  r:gives {
    ((109 105 109 117 114 105 103 110 105) :pop (109 105 109 117 114 105 103 110 105)) :palindrome true.
  };
  r:evidence (
    [ a r:Fact; r:gives {(109 105 109 117 114 105 103 110 105) e:firstRest (109 (105 109 117 114 105 103 110 105))}]
    [ a r:Fact; r:gives {(109 105 109 117 114 105 103 110 105) e:firstRest (109 (105 109 117 114 105 103 110 105))}]
    <#lemma32>
  );
  r:binding [ r:variable [ n3:uri "http://josd.github.io/var#x_0"]; r:boundTo (109 105 109 117 114 105 103 110 105)];
  r:binding [ r:variable [ n3:uri "http://josd.github.io/var#x_1"]; r:boundTo 109];
  r:binding [ r:variable [ n3:uri "http://josd.github.io/var#x_2"]; r:boundTo (105 109 117 114 105 103 110 105)];
  r:binding [ r:variable [ n3:uri "http://josd.github.io/var#x_3"]; r:boundTo (109 105 109 117 114 105 103 110 105)];
  r:binding [ r:variable [ n3:uri "http://josd.github.io/var#x_4"]; r:boundTo (105 109 117 114 105 103 110 105)];
  r:rule <#lemma25>.

<#lemma32> a r:Inference;
  r:gives {
    ((105 109 117 114 105 103 110 105) :pop (105 109 117 114 105 103 110 105)) :palindrome true.
  };
  r:evidence (
    [ a r:Fact; r:gives {(105 109 117 114 105 103 110 105) e:firstRest (105 (109 117 114 105 103 110 105))}]
    [ a r:Fact; r:gives {(105 109 117 114 105 103 110 105) e:firstRest (105 (109 117 114 105 103 110 105))}]
    <#lemma33>
  );
  r:binding [ r:variable [ n3:uri "http://josd.github.io/var#x_0"]; r:boundTo (105 109 117 114 105 103 110 105)];
  r:binding [ r:variable [ n3:uri "http://josd.github.io/var#x_1"]; r:boundTo 105];
  r:binding [ r:variable [ n3:uri "http://josd.github.io/var#x_2"]; r:boundTo (109 117 114 105 103 110 105)];
  r:binding [ r:variable [ n3:uri "http://josd.github.io/var#x_3"]; r:boundTo (105 109 117 114 105 103 110 105)];
  r:binding [ r:variable [ n3:uri "http://josd.github.io/var#x_4"]; r:boundTo (109 117 114 105 103 110 105)];
  r:rule <#lemma25>.

<#lemma33> a r:Inference;
  r:gives {
    ((109 117 114 105 103 110 105) :pop (109 117 114 105 103 110 105)) :palindrome true.
  };
  r:evidence (
    [ a r:Fact; r:gives {(109 117 114 105 103 110 105) e:firstRest (109 (117 114 105 103 110 105))}]
    [ a r:Fact; r:gives {(109 117 114 105 103 110 105) e:firstRest (109 (117 114 105 103 110 105))}]
    <#lemma34>
  );
  r:binding [ r:variable [ n3:uri "http://josd.github.io/var#x_0"]; r:boundTo (109 117 114 105 103 110 105)];
  r:binding [ r:variable [ n3:uri "http://josd.github.io/var#x_1"]; r:boundTo 109];
  r:binding [ r:variable [ n3:uri "http://josd.github.io/var#x_2"]; r:boundTo (117 114 105 103 110 105)];
  r:binding [ r:variable [ n3:uri "http://josd.github.io/var#x_3"]; r:boundTo (109 117 114 105 103 110 105)];
  r:binding [ r:variable [ n3:uri "http://josd.github.io/var#x_4"]; r:boundTo (117 114 105 103 110 105)];
  r:rule <#lemma25>.

<#lemma34> a r:Inference;
  r:gives {
    ((117 114 105 103 110 105) :pop (117 114 105 103 110 105)) :palindrome true.
  };
  r:evidence (
    [ a r:Fact; r:gives {(117 114 105 103 110 105) e:firstRest (117 (114 105 103 110 105))}]
    [ a r:Fact; r:gives {(117 114 105 103 110 105) e:firstRest (117 (114 105 103 110 105))}]
    <#lemma35>
  );
  r:binding [ r:variable [ n3:uri "http://josd.github.io/var#x_0"]; r:boundTo (117 114 105 103 110 105)];
  r:binding [ r:variable [ n3:uri "http://josd.github.io/var#x_1"]; r:boundTo 117];
  r:binding [ r:variable [ n3:uri "http://josd.github.io/var#x_2"]; r:boundTo (114 105 103 110 105)];
  r:binding [ r:variable [ n3:uri "http://josd.github.io/var#x_3"]; r:boundTo (117 114 105 103 110 105)];
  r:binding [ r:variable [ n3:uri "http://josd.github.io/var#x_4"]; r:boundTo (114 105 103 110 105)];
  r:rule <#lemma25>.

<#lemma35> a r:Inference;
  r:gives {
    ((114 105 103 110 105) :pop (114 105 103 110 105)) :palindrome true.
  };
  r:evidence (
    [ a r:Fact; r:gives {(114 105 103 110 105) e:firstRest (114 (105 103 110 105))}]
    [ a r:Fact; r:gives {(114 105 103 110 105) e:firstRest (114 (105 103 110 105))}]
    <#lemma36>
  );
  r:binding [ r:variable [ n3:uri "http://josd.github.io/var#x_0"]; r:boundTo (114 105 103 110 105)];
  r:binding [ r:variable [ n3:uri "http://josd.github.io/var#x_1"]; r:boundTo 114];
  r:binding [ r:variable [ n3:uri "http://josd.github.io/var#x_2"]; r:boundTo (105 103 110 105)];
  r:binding [ r:variable [ n3:uri "http://josd.github.io/var#x_3"]; r:boundTo (114 105 103 110 105)];
  r:binding [ r:variable [ n3:uri "http://josd.github.io/var#x_4"]; r:boundTo (105 103 110 105)];
  r:rule <#lemma25>.

<#lemma36> a r:Inference;
  r:gives {
    ((105 103 110 105) :pop (105 103 110 105)) :palindrome true.
  };
  r:evidence (
    [ a r:Fact; r:gives {(105 103 110 105) e:firstRest (105 (103 110 105))}]
    [ a r:Fact; r:gives {(105 103 110 105) e:firstRest (105 (103 110 105))}]
    <#lemma37>
  );
  r:binding [ r:variable [ n3:uri "http://josd.github.io/var#x_0"]; r:boundTo (105 103 110 105)];
  r:binding [ r:variable [ n3:uri "http://josd.github.io/var#x_1"]; r:boundTo 105];
  r:binding [ r:variable [ n3:uri "http://josd.github.io/var#x_2"]; r:boundTo (103 110 105)];
  r:binding [ r:variable [ n3:uri "http://josd.github.io/var#x_3"]; r:boundTo (105 103 110 105)];
  r:binding [ r:variable [ n3:uri "http://josd.github.io/var#x_4"]; r:boundTo (103 110 105)];
  r:rule <#lemma25>.

<#lemma37> a r:Inference;
  r:gives {
    ((103 110 105) :pop (103 110 105)) :palindrome true.
  };
  r:evidence (
    [ a r:Fact; r:gives {(103 110 105) e:firstRest (103 (110 105))}]
    [ a r:Fact; r:gives {(103 110 105) e:firstRest (103 (110 105))}]
    <#lemma38>
  );
  r:binding [ r:variable [ n3:uri "http://josd.github.io/var#x_0"]; r:boundTo (103 110 105)];
  r:binding [ r:variable [ n3:uri "http://josd.github.io/var#x_1"]; r:boundTo 103];
  r:binding [ r:variable [ n3:uri "http://josd.github.io/var#x_2"]; r:boundTo (110 105)];
  r:binding [ r:variable [ n3:uri "http://josd.github.io/var#x_3"]; r:boundTo (103 110 105)];
  r:binding [ r:variable [ n3:uri "http://josd.github.io/var#x_4"]; r:boundTo (110 105)];
  r:rule <#lemma25>.

<#lemma38> a r:Inference;
  r:gives {
    ((110 105) :pop (110 105)) :palindrome true.
  };
  r:evidence (
    [ a r:Fact; r:gives {(110 105) e:firstRest (110 (105))}]
    [ a r:Fact; r:gives {(110 105) e:firstRest (110 (105))}]
    <#lemma39>
  );
  r:binding [ r:variable [ n3:uri "http://josd.github.io/var#x_0"]; r:boundTo (110 105)];
  r:binding [ r:variable [ n3:uri "http://josd.github.io/var#x_1"]; r:boundTo 110];
  r:binding [ r:variable [ n3:uri "http://josd.github.io/var#x_2"]; r:boundTo (105)];
  r:binding [ r:variable [ n3:uri "http://josd.github.io/var#x_3"]; r:boundTo (110 105)];
  r:binding [ r:variable [ n3:uri "http://josd.github.io/var#x_4"]; r:boundTo (105)];
  r:rule <#lemma25>.

<#lemma39> a r:Inference;
  r:gives {
    ((105) :pop (105)) :palindrome true.
  };
  r:evidence (
    [ a r:Fact; r:gives {(105) e:firstRest (105 ())}]
    [ a r:Fact; r:gives {(105) e:firstRest (105 ())}]
    <#lemma40>
  );
  r:binding [ r:variable [ n3:uri "http://josd.github.io/var#x_0"]; r:boundTo (105)];
  r:binding [ r:variable [ n3:uri "http://josd.github.io/var#x_1"]; r:boundTo 105];
  r:binding [ r:variable [ n3:uri "http://josd.github.io/var#x_2"]; r:boundTo ()];
  r:binding [ r:variable [ n3:uri "http://josd.github.io/var#x_3"]; r:boundTo (105)];
  r:binding [ r:variable [ n3:uri "http://josd.github.io/var#x_4"]; r:boundTo ()];
  r:rule <#lemma25>.

<#lemma40> a r:Extraction;
  r:gives {
    (() :pop ()) :palindrome true.
  };
  r:because [ a r:Parsing; r:source <http://josd.github.io/brain/preduction/palindrome2.n3>].

#2020-02-22T21:52:29.104Z in=7 out=1 ent=1 step=1 brake=1 inf=170318 sec=0.145 inf/sec=1174607
#ENDS

